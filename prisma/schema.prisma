// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id          Int      @id @default(autoincrement())
  nom         String
  prenom      String
  email       String   @unique
  telephone   String
  adresse     String
  motDePasse  String
  role        String   @db.VarChar(10)
  inscritLe   DateTime @default(now())
  client      Client?
  admin       Admin?
  avis        Avis[]
  notification Notification[]
  chatbot     Chatbot?
  messageInfo MessageInfo[]
}

model Client {
  id              Int      @id
  soldePoints     Int      @default(0)
  historiqueAchats String?
  utilisateur     Utilisateur @relation(fields: [id], references: [id], onDelete: Cascade)
  panier          Panier[]
  commande        Commande[]
}

model Admin {
  id          Int      @id
  utilisateur Utilisateur @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Avis {
  id            Int      @id @default(autoincrement())
  note          Int
  commentaire   String?
  utilisateur   Utilisateur @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id Int
}

model Notification {
  id            Int      @id @default(autoincrement())
  message       String
  dateEnvoi     DateTime
  statut        String   @db.VarChar(20)
  utilisateur   Utilisateur @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id Int
}

model Chatbot {
  id            Int      @id @default(autoincrement())
  utilisateur   Utilisateur @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id Int      @unique
}

model Panier {
  id            Int      @id @default(autoincrement())
  date          DateTime
  total         Float    @default(0)
  client        Client   @relation(fields: [client_id], references: [id], onDelete: Cascade)
  client_id     Int
  lignePanier   LignePanier[]
  commande      Commande[]
}

model Produit {
  id            Int      @id @default(autoincrement())
  designation   String
  description   String?
  prixHT        Float
  tva           Float
  prixTTC       Float
  stock         Int
  deleted       Boolean  @default(false)
  lignePanier   LignePanier[]
}

model LignePanier {
  id            Int      @id @default(autoincrement())
  prix          Float
  quantite      Int
  sousTotal     Float
  panier        Panier   @relation(fields: [panier_id], references: [id], onDelete: Cascade)
  panier_id     Int
  produit       Produit  @relation(fields: [produit_id], references: [id], onDelete: Cascade)
  produit_id    Int
}

model Commande {
  id            Int      @id @default(autoincrement())
  total         Float
  montantPaiement Float
  client        Client   @relation(fields: [client_id], references: [id], onDelete: Cascade)
  client_id     Int
  panier        Panier   @relation(fields: [panier_id], references: [id], onDelete: Cascade)
  panier_id     Int
  livraison     Livraison[]
}

model Livraison {
  id            Int      @id @default(autoincrement())
  date          DateTime
  nomLivreur    String
  statutLivraison String @db.VarChar(50)
  detailPaiement String
  commande      Commande @relation(fields: [commande_id], references: [id], onDelete: Cascade)
  commande_id   Int
}

model MessageInfo {
  id            Int      @id @default(autoincrement())
  contenu       String
  dateEnvoi     DateTime
  utilisateur   Utilisateur @relation(fields: [utilisateur_id], references: [id], onDelete: Cascade)
  utilisateur_id Int
}
